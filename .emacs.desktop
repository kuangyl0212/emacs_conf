;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon Jan 22 22:18:10 2018
;; Desktop file format version 208
;; Emacs version 25.3.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23141 62114 341440 0) (desktop . "208") "ruling@ACA2016A.ipt.aol.com" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-16-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "#f8f8f0") (background-color . "#1b1d1e") (line-spacing) (left-fringe . 8) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen . maximized) (display-type . color) (background-mode . dark) (cursor-color . "#f8f8f0") (environment) (frameset--id . "399A-6207-C925-EDFC") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "ACA2016A.ipt.aol.com") (explicit-name) (tool-bar-position . top) (user-size . t) (visibility . t) (height . 40) (width . 140) (left . 0) (top . 22)) ((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 7) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 76) (min-pixel-width . 100) (min-pixel-height-ignore . 76) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 19) (min-pixel-width-safe . 20)) leaf (pixel-width . 1436) (pixel-height . 753) (total-width . 143) (total-height . 39) (normal-height . 1.0) (normal-width . 1.0) (buffer "1-2.c" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 1) (scroll-bars nil 2 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("add-to-list"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/init.el" "~/workspace/practice/3-2.c" "~/workspace/practice/A1.c" "~/workspace/practice/3-7.c" "~/workspace/practice/3-6-1.cpp" "~/workspace/practice/3-1.c" "~/workspace/practice/2-4.c" "~/workspace/practice/2-2.c" "~/workspace/practice/1-6.c" "~/workspace/practice/1-2.c" "~/workspace/practice/1-6.c" "~/workspace/practice/2-2.c" "~/workspace/practice/2-4.c" "~/workspace/practice/3-1.c" "~/workspace/practice/3-6-1.cpp" "~/workspace/practice/3-7.c" "~/workspace/practice/A1.c" "~/workspace/practice/3-2.c" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/init.el" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/1002.cc" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1002.cc" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/.emacs.d/init.el" "~/.emacs.d/elpa/tabbar-20160524.1401/tabbar-autoloads.el" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/.emacs.d/ede-projects.el" "~/.emacs.d/elpa/sr-speedbar-20161025.131/sr-speedbar-autoloads.el" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/2033.c" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/2033.c" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/workspace/practice/hdoj/2000.c" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1004.cc" "~/workspace/practice/hdoj/1002.cc" "~/workspace/practice/hdoj/2000.c" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/ede-projects.el" "~/.emacs.d/elpa/ecb-20170728.1221/ecb-autoloads.el" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/elpa/window-number-20170731.1851/window-number-autoloads.el" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/elpa/evil-20180103.2356/evil-autoloads.el" "~/.emacs.d/elpa/undo-tree-20170706.246/undo-tree-autoloads.el" "~/.emacs.d/elpa/goto-chg-20180105.1033/goto-chg-autoloads.el" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/init.el" "~/workspace/practice/hdoj/1005.cc" "~/.emacs.d/init.el" "~/workspace/.DS_Store" "~/.emacs.d/init.el" "/Users/ruling/workspace" "~/.emacs.d/init.el" "~/.emacs.d/elpa/helm-20180119.1053/helm-autoloads.el" "~/.emacs.d/elpa/popup-20160709.729/popup-autoloads.el" "~/.emacs.d/elpa/helm-core-20180121.1022/helm-core-autoloads.el" "~/.emacs.d/elpa/async-20180119.533/async-autoloads.el" "~/.emacs.d/init.el" "~/workspace/prictice/hdoj/" "~/.emacs.d/init.el" "~/workspace/prictice/hdoj/1002.cc" "~/org/study.org" "~/org/notes/cpp.org" "~/org/notes/cpp.html" "~/workspace/cppprimer/2.16.cc" "~/workspace/cppprimer/2.14.cc" "~/org/study.html" "~/.emacs.d/elpa/window-numbering-20160809.1110/window-numbering-autoloads.el" "~/.emacs.d/elpa/org-pomodoro-20171108.1314/org-pomodoro-autoloads.el" "~/.emacs.d/elpa/alert-20180116.1751/alert-autoloads.el" "~/.emacs.d/elpa/gntp-20141024.1950/gntp-autoloads.el" "~/.emacs.d/elpa/log4e-20170401.604/log4e-autoloads.el" "~/.emacs.d/elpa/js3-mode-20160515.850/js3-mode-autoloads.el" "~/.emacs.d/elpa/monokai-theme-20180104.429/monokai-theme-autoloads.el" "~/.emacs.d/elpa/exec-path-from-shell-20170508.4/exec-path-from-shell-autoloads.el" "~/.emacs.d/elpa/nodejs-repl-20170722.443/nodejs-repl-autoloads.el" "~/.emacs.d/elpa/js2-mode-20171224.1833/js2-mode-autoloads.el" "~/.emacs.d/elpa/smartparens-20180118.735/smartparens-autoloads.el" "~/.emacs.d/elpa/dash-20180118.743/dash-autoloads.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/1-2.c"
  "1-2.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/1-6.c"
  "1-6.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/2-2.c"
  "2-2.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/2-4.c"
  "2-4.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/3-1.c"
  "3-1.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/3-6-1.cpp"
  "3-6-1.cpp"
  'c++-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/3-7.c"
  "3-7.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/A1.c"
  "A1.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/3-2.c"
  "3-2.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  222
  '(222 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "practice"
  'dired-mode
  '(linum-mode company-mode highlight-parentheses-mode)
  850
  '(850 nil)
  t
  '("/Users/ruling/workspace/practice/")
  '((overwrite-mode))
  '((mark-ring (617 258))))

(desktop-create-buffer 208
  nil
  "workspace"
  'dired-mode
  '(linum-mode company-mode highlight-parentheses-mode)
  248
  '(nil nil)
  t
  '("/Users/ruling/workspace/")
  '((overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/Users/ruling/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  7904
  '(7904 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring (7904 7904 6667 6667 8500 8499 7622 7621 6891 6890 726 6855 6844 4277 782 765))))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/hdoj/1005.cc"
  "1005.cc"
  'c++-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode))
  '((mark-ring (1))))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/hdoj/1004.cc"
  "1004.cc"
  'c++-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring (1 1 1 1))))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/hdoj/2033.c"
  "2033.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring (1 1 1))))

(desktop-create-buffer 208
  "/Users/ruling/workspace/practice/hdoj/2000.c"
  "2000.c"
  'c-mode
  '(abbrev-mode linum-mode company-mode highlight-parentheses-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring (1 1))))

